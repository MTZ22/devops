kind: Deployment
apiVersion: apps/v1
metadata:
  name: apisix
  namespace: ns-apim
  labels:
    #    app: apisix
    app.kubernetes.io/instance: apisix
    app.kubernetes.io/name: apisix
    # app.kubernetes.io/version: 2.15
spec:
  replicas: 2
  selector:
    matchLabels:
      #      app: apisix
      app.kubernetes.io/instance: apisix
      app.kubernetes.io/name: apisix
  template:
    metadata:
      creationTimestamp: null
      labels:
        #        app: apisix
        app.kubernetes.io/instance: apisix
        app.kubernetes.io/name: apisix
        efklogflag: "true"  # 要采集日志需要加上该标签
    spec:
      volumes:
        - name: apisix-config
          configMap:
            name: apisix
            defaultMode: 420
      initContainers:
        - name: wait-etcd
          image: registry.easesaas.com/myron/busybox:1.28
          command:
            - sh
            - '-c'
            - >-
              until nc -z apisix-etcd.ns-apim.svc.cluster.local 2379; do echo
              waiting for etcd `date`; sleep 2; done;
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      containers:
        - name: apisix
          #          image: apache/apisix:2.15.3-centos #2.10.0-alpine
          image: registry.easesaas.com/myron/apisix:2.15.3-centos #2.10.0-alpine
          ports:
            - name: http
              containerPort: 9080
              protocol: TCP
            - name: tls
              containerPort: 9443
              protocol: TCP
            - name: admin
              containerPort: 9180
              protocol: TCP            
            - name: prometheus
              containerPort: 9091
              protocol: TCP
          resources: 
            limits: 
              cpu: "1000m"
              memory: "2Gi"
            requests: 
              cpu: "100m"
              memory: "1Gi"
          volumeMounts:
            - name: apisix-config
              mountPath: /usr/local/apisix/conf/config.yaml
              subPath: config.yaml
          readinessProbe:
            tcpSocket:
              port: 9080
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 6
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - '-c'
                  - sleep 30
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
