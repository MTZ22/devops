---
apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-conf
  labels:
    app: opentelemetry
    component: otel-collector-conf
data:
  otel-collector-config: |
    receivers:
      otlp:
        protocols:
          grpc:
          http:
      prometheus: 
        config:
          scrape_configs: 
           #- job_name: "vm-monitoring"
           #  scrape_interval: 10s
           #  static_configs:
           #    - targets: ["172.16.0.5:9100","172.16.0.10:9100","172.16.0.11:9100","172.16.0.12:9100","172.16.0.13:9100","172.16.0.14:9100","172.16.0.15:9100","172.16.0.16:9100"]

          - job_name: 'apisix-monitoring'
            scrape_interval: 1s
            metrics_path: "/apisix/prometheus/metrics"
            static_configs:
              - targets: ['apisix.ns-apim.svc:9091']
                labels:
                  skywalking_service: apisix

          - job_name: 'kubernetes-cadvisor'
            scheme: https
            tls_config:
              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
            kubernetes_sd_configs:
              - role: node
            relabel_configs:
              - action: labelmap
                regex: __meta_kubernetes_node_label_(.+)
              - source_labels: [ ]
                target_label: cluster
                replacement: socialhub
              - target_label: __address__
                replacement: kubernetes.default.svc:443
              - source_labels: [ __meta_kubernetes_node_name ]
                regex: (.+)
                target_label: __metrics_path__
                replacement: /api/v1/nodes/$${1}/proxy/metrics/cadvisor
              - source_labels: [ instance ]
                separator: ;
                regex: (.+)
                target_label: node
                replacement: $$1
                action: replace
          # @feature: kubernetes-monitor; configuration to scrape Kubernetes Endpoints metrics
          - job_name: kube-state-metrics
            metrics_path: /metrics
            kubernetes_sd_configs:
              - role: endpoints
            relabel_configs:
              - source_labels: [ __meta_kubernetes_service_label_app_kubernetes_io_name ]
                regex: kube-state-metrics
                replacement: $$1
                action: keep
              - action: labelmap
                regex: __meta_kubernetes_service_label_(.+)
              - source_labels: [ ]
                target_label: cluster
                replacement: socialhub

    processors:
      batch:
      memory_limiter:
        # 80% of maximum memory up to 2G
        limit_mib: 1500
        # 25% of limit up to 2G
        spike_limit_mib: 512
        check_interval: 5s
    extensions:
      zpages: {}
      memory_ballast:
        # Memory Ballast size should be max 1/3 to 1/2 of memory.
        size_mib: 683
    exporters:
      otlp:
        endpoint: "skywalking-oap.ns-monitor.svc:11800" # Replace with a real endpoint.
        tls:
          insecure: true
              
    service:
      telemetry:
        logs:
          level: DEBUG
      extensions: [zpages, memory_ballast]
      pipelines:
        metrics:
          receivers: [prometheus]
          processors: [memory_limiter, batch]
          exporters: [otlp]
---
apiVersion: v1
kind: Service
metadata:
  name: otel-collector
  labels:
    app: opentelemetry
    component: otel-collector
spec:
  ports:
  - name: otlp-grpc # Default endpoint for OpenTelemetry gRPC receiver.
    port: 4317
    protocol: TCP
    targetPort: 4317
  - name: otlp-http # Default endpoint for OpenTelemetry HTTP receiver.
    port: 4318
    protocol: TCP
    targetPort: 4318
  - name: metrics # Default endpoint for querying metrics.
    port: 8888
  selector:
    component: otel-collector

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-collector
  labels:
    app: opentelemetry
    component: otel-collector
spec:
  selector:
    matchLabels:
      app: opentelemetry
      component: otel-collector
  minReadySeconds: 5
  progressDeadlineSeconds: 120
  replicas: 1 #TODO - adjust this to your own requirements
  template:
    metadata:
      labels:
        app: opentelemetry
        component: otel-collector
    spec:
      serviceAccountName: otel-collector
      containers:
      - command:
          - "/otelcol"
          - "--config=/conf/otel-collector-config.yaml"
       #image: otel/opentelemetry-collector:0.74.0
        image: registry.easesaas.com/myron/opentelemetry-collector:0.79.0
        name: otel-collector
        resources:
          limits:
            cpu: 1000m
            memory: 3Gi
          requests:
            cpu: 100m
            memory: 2Gi
        ports:
        - containerPort: 55679 # Default endpoint for ZPages.
        - containerPort: 4317 # Default endpoint for OpenTelemetry receiver.
        - containerPort: 14250 # Default endpoint for Jaeger gRPC receiver.
        - containerPort: 14268 # Default endpoint for Jaeger HTTP receiver.
        - containerPort: 9411 # Default endpoint for Zipkin receiver.
        - containerPort: 8888  # Default endpoint for querying metrics.
        volumeMounts:
        - name: otel-collector-config-vol
          mountPath: /conf
      volumes:
        - configMap:
            name: otel-collector-conf
            items:
              - key: otel-collector-config
                path: otel-collector-config.yaml
          name: otel-collector-config-vol
      #hostAliases:
      #- hostnames:
      #  - socialhub-prod-yjd-bastion
      #  ip: 172.16.0.5
      #- hostnames:
      #  - socialhub-prod-yjd-emr-01
      #  ip: 172.16.0.10
